---

- name: compile compose templates
  template:
    src: "{{ item }}"
    dest: "/home/apim/core-apis/{{ item | replace('.j2','') }}"
    owner: "apim"
    mode: 0640
  become: yes
  become_user: apim
  when: deploy_core_default_templates
  with_items:
      - docker-compose.yml.j2
      - common.yml.j2
      - service-defs.yml.j2
      - proxy.yml.j2
      - pull_images.sh.j2

- name: Copy core-apis ssl files
  copy:
    src: "agave_core_configs/httpd/"
    dest: "/home/apim/core-apis/ssl/ mode=0755"
    owner: "apim"
    mode: 0640
  when: core_deploy_ssl_certs 
  become: yes
  become_user: apim

- name: Generate self-signed certs on remote host
  import_tasks: create_tls_certs.yml
  when: core_deploy_ssl_certs == false 

- name: Pull latest docker images from templates
  shell: ./pull_images.sh chdir=/home/apim/core-apis/
  become: yes
  become_user: apim
  environment:
      AGAVE_VERSION: '{{ agave_core_version }}'
      COMPOSE_HTTP_TIMEOUT: 2000
  ignore_errors: True
  when: not deploy_core_default_templates


- name: Check for existing containers
  shell: docker ps -aq
  become: yes
  become_user: apim
  ignore_errors: yes
  register: docker_ps_core_containers

# ignore errors here since this call will fail if there are no containers running
- name: remove existing containers
  shell: /usr/local/bin/docker-compose -p apim -f {{ item }} down
  args:
    chdir: "/home/apim/core-apis/"
  loop:
    - proxy.yml
    - docker-compose.yml
  become: yes
  become_user: apim
  ignore_errors: yes
  when: kill_core_containers|bool and docker_ps_core_containers.stdout
  register: docker_rm_core_containers

- pause: seconds=30
  when: kill_core_containers|bool and docker_ps_core_containers.stdout

- name: start the core-apis proxy container with docker compose
  shell: /usr/local/bin/docker-compose -p apim -f proxy.yml up -d
  args:
    chdir: "/home/apim/core-apis/"
  become: yes
  become_user: apim
  environment:
      AGAVE_VERSION: '{{ agave_core_version }}'
      COMPOSE_HTTP_TIMEOUT: 2000



