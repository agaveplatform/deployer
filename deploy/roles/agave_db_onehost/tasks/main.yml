---

- include_vars: tenants/{{ tenant_id }}/{{ tenant_id }}.yml
- include_vars: tenants/{{ tenant_id }}/{{ tenant_id }}_passwords
- include_vars: agave_core_configs/{{ tenant_id }}.yml
- include_vars: agave_core_configs/{{ tenant_id }}_passwords

- name: Create deployment directory
  file:
    path: "/home/apim/agave-db-onehost/"
    state: directory
    owner: apim
    mode: 0750
  become: yes
  become_user: apim

- name: Compile docker_compose template
  template:
    src: docker-compose-dbs-onehost-v2.yml.j2
    dest: /home/apim/agave-db-onehost/docker-compose-dbs-onehost.yml
    owner: apim
    mode: 0750
  become: yes
  become_user: apim

- name: Create ansible Mysql configuration file
  template:
    src: my.cnf.j2
    dest: /home/apim/agave-db-onehost/my.cnf
  become: yes
  become_user: apim

- name: Check for existing containers
  shell: /usr/local/bin/docker-compose -f docker-compose-dbs-onehost.yml ps -q
  args:
    chdir: /home/apim/agave-db-onehost/
  environment:
    COMPOSE_HTTP_TIMEOUT: 20000
  become: yes
  become_user: apim
  ignore_errors: yes
  register: docker_compose_ps_db_containers

# ignore errors here since this call will fail if there are no containers running
- name: Remove existing containers
  shell: /usr/local/bin/docker-compose -f docker-compose-dbs-onehost.yml down -v
  args:
    chdir: /home/apim/agave-db-onehost/
  environment:
    COMPOSE_HTTP_TIMEOUT: 20000
  become: yes
  become_user: apim
  ignore_errors: yes
  when:
    - kill_db_containers|bool
    - docker_compose_ps_db_containers is success
    - docker_compose_ps_db_containers.stdout !== ''
  register: docker_rm_db_containers

- pause:
    seconds: 30
  when: kill_db_containers == True

- name: Clear persistent container data
  file:
    state: absent
    path: "/home/apim/agave-db-onehost/{{item}}"
  with_items:
    - slapd_data
    - beanstalkd_data
    - mongo_data
    - mysql_core_data
    - mysql_auth_data
  when: kill_db_containers and create_persistent_db_volumes

- name: Pull the docker images
  shell: /usr/local/bin/docker-compose -f docker-compose-dbs-onehost.yml pull --ignore-pull-failures
  args:
    chdir: /home/apim/agave-db-onehost
  become: yes
  become_user: apim
  environment:
    COMPOSE_HTTP_TIMEOUT: 20000

- pause:
    seconds: 30

- name: Start the containers with docker compose
  shell: /usr/local/bin/docker-compose -f docker-compose-dbs-onehost.yml up -d
  args:
    chdir: /home/apim/agave-db-onehost
  become: yes
  become_user: apim
  environment:
    COMPOSE_HTTP_TIMEOUT: 20000
