# Updates an existing mysql server with the databses needed for an APIM instance. Installs three new dbs:
# apimgtdb, regdb, and userdb and runs a sql load script to populate the dbs with initial data.

- include_vars: tenants/{{ tenant_id }}/{{ tenant_id }}.yml
- include_vars: tenants/{{ tenant_id }}/{{ tenant_id }}_passwords

- name: Install python mysqldb module - debian
  apt:
    name: python-mysqldb
    state: present
  become: yes
  when: ansible_os_family == "Debian"

- name: Install mysql client package - debian
  apt:
    name: mysql-client
    state: present
  become: yes
  when: ansible_os_family == "Debian"

- name: Install python mysqldb module - centos
  yum: name=MySQL-python state=installed
  become: yes
  when: ansible_os_family == "RedHat"

- name: Install mysql client package - centos
  yum:
    name: mysql
    state: present
  become: yes
  when: ansible_os_family == "RedHat"

- name: Create templates dir for apim
  file:
    path: "/home/apim/mysql_apim/apim_mysql_scripts/{{ tenant_id }}"
    state: directory
    owner: apim
    mode: 0750
  become: yes
  become_user: apim

#- name: Create ansible Mysql configuration file
#  template:
#    src: ".my.cnf.j2"
#    dest: "/home/apim/mysql_apim/.my.cnf"
#    owner: apim
#    mode: 0640
#  become: yes
#  become_user: apim

- name: Compile mysql load script
  template:
    src: "mysql_alldbs_am19.sql.j2"
    dest: "/home/apim/mysql_apim/apim_mysql_scripts/{{ tenant_id }}/am{{ apim_version }}-amdbs.sql"
    owner: apim
    mode: 0640
  become: yes
  become_user: apim
  when: load_auth_sql_data

- debug: msg="The mysql root user is {{ mysql_root_user }}"

- debug: msg="The mysql root password is {{ mysql_root_password }}"

- debug: msg="The mysql login host is {{ mysql_login_host }}"

- debug: msg="The mysql login port is {{ mysql_login_port }}"

- name: Wait for servers to start up
  wait_for:
    port: "{{ mysql_login_port }}"
    host: "{{ mysql_login_host }}"
  when: load_auth_sql_data

- name: Execute sql script
  shell: |
    mysql -u{{ mysql_root_user }} \
          -h {{ mysql_login_host }} \
          -P {{ mysql_login_port }} \
          -p{{ mysql_root_password }} \
          < /home/apim/mysql_apim/apim_mysql_scripts/{{ tenant_id }}/am{{ apim_version }}-amdbs.sql
  become: yes
  become_user: apim
  when: load_auth_sql_data

- debug: msg="The tenant mysql user is {{ mysql_tenant_user }}"

- debug: msg="The tenant mysql password is {{ mysql_tenant_pass }}"

- name: Register db variables
  shell: echo apimgtdb_{{ tenant_id }}
  register: apimgtdb

- name: Register db variables
  shell: echo userdb_{{ tenant_id }}
  register: userdb

- name: Register db variables
  shell: echo regdb_{{ tenant_id }}
  register: regdb

- name: Create tenant mysql user
  mysql_user:
    name: "{{ mysql_tenant_user }}"
    password: "{{ mysql_tenant_pass }}"
    priv: "{{ apimgtdb.stdout }}.*:ALL/{{ regdb.stdout }}.*:ALL/{{ userdb.stdout }}.*:ALL"
    state: present
    login_host: "{{ mysql_login_host }}"
    login_port: "{{ mysql_login_port }}"
    login_user: "{{ mysql_root_user }}"
    login_password: "{{ mysql_root_password }}"
    host: "{{ item }}"
  become: yes
  become_user: apim
  with_items:
    - "%"
    - "localhost"
  when: create_tenant_mysql_user
