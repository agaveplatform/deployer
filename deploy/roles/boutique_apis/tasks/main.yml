---

- include_vars: tenants/{{ tenant_id }}/{{ tenant_id }}.yml

- name: check if A_deployed
  stat:
    path: "/home/apim/auth-services/A_deployed"
  register: A
  become: yes
  become_user: apim

- name: msg
  debug:
    msg: "A containers are not deployed (A_deployed path doesn't exist)"
  when: A.stat.exists == False

- name: check if B_deployed
  stat:
    path: "/home/apim/auth-services/B_deployed"
  register: B
  become: yes
  become_user: apim

- debug:
    msg: "B containers are not deployed (B_deployed path doesn't exist)"
  when: B.stat.exists == False

- name: ensure api directory present
  file:
    path: "/home/apim/boutique_apis"
    state: "directory"
    owner: "apim"
    mode: 0640
  become: yes

- name: compile api.json templates
  template:
    src: "{{ item }}.json.j2"
    dest: "/home/apim/boutique_apis/{{ item }}.json"
    owner: "apim"
    mode: 0640
  with_items: "{{ boutique_apis }}"
  become: yes

- name: A stack -- ensure each api is registered and published and any necessary roles exist
  shell: docker run --rm -i --link a_adminnginx_1 -e base_url=http://a_adminnginx_1:80 -v /home/apim/boutique_apis/{{ item }}.json:/api.json agaveplatform/flask_admin_utils
  with_items: "{{ boutique_apis }}"
  become: yes
  become_user: apim
  when: A.stat.exists == True

- name: B stack -- ensure each api is registered and published and any necessary roles exist
  shell: docker run --rm -i --link b_adminnginx_1 -e base_url=http://b_adminnginx_1:80 -v /home/apim/boutique_apis/{{ item }}.json:/api.json agaveplatform/flask_admin_utils
  with_items: "{{ boutique_apis }}"
  become: yes
  become_user: apim
  when: B.stat.exists == True
