---
################################################################################
#
#   os_provision.plbk
#
#
################################################################################

- name: Setup Major Variables in Local Host's Facts
  hosts: local

  vars:

    agave_namespace: agave_ci_sandbox
    agave_security_group_namespace: agave_ci_sandbox

    os_public_key: "{{ansible_env['HOME']}}/.ssh/id_rsa.pub"
    os_private_key: "{{ansible_env['HOME']}}/.ssh/id_rsa"
#    os_authurl: "{{ lookup('env', 'OS_AUTH_URL') }}"
#    os_domain: "{{ lookup('env', 'OS_USER_DOMAIN_NAME') }}"
#    os_project: "{{ lookup('env', 'OS_PROJECT_NAME') }}"
#    os_username: "{{lookup('env', 'OS_USERNAME')}}"
#    os_password: "{{lookup('env', 'OS_PASSWORD')}}"
#    os_region: "{{ lookup('env', 'OS_REGION_NAME') }}"
#    os_zone: "{{ lookup('env', 'OS_ZONE_NAME')}}"
    os_flavor: m1.medium
    os_image: 8c80e6da-a3f1-4ba2-afb2-d107ef3387f1
    os_instance_username: centos

    os_network_cidr: 10.10.9.0/24
    os_network_allocation_pool_start: 10.10.9.2
    os_network_allocation_pool_end: 10.10.9.254
    os_network_gateway_ip: 10.10.9.1

  tasks:

    - name: Set Facts Collected Environment
      tags:
        - setup
      set_fact:

        agave_namespace: "{{agave_namespace}}"
        agave_security_group_namespace: "{{agave_security_group_namespace}}"

#        os_authurl: "{{os_authurl}}"
#        os_domain: "{{os_domain}}"
#        os_project: "{{os_project}}"
#        os_username: "{{os_username}}"
#        os_password: "{{os_password}}"
#        os_region: "{{os_region}}"
#        os_zone: "{{os_zone}}"
        os_image: "{{os_image}}"
        os_flavor: "{{os_flavor}}"
        os_instance_username: "{{os_instance_username}}"

        os_auth_vm_name: "{{agave_namespace}}.agave.auth"
        os_core_api_vm_name: "{{agave_namespace}}.agave.core.core_api"
        os_core_worker_vm_name: "{{agave_namespace}}.agave.core.core_workers"
        os_db_vm_name: "{{agave_namespace}}.agave.db"

        os_auth_security_group: "{{agave_security_group_namespace}}.auth"
        os_core_security_group: "{{agave_security_group_namespace}}.core"
        os_db_security_group: "{{agave_security_group_namespace}}.db"

        os_skip_floating_ip: False

        os_network: "{{agave_namespace}}_net"
        os_subnet: "{{agave_namespace}}_subnet"
        os_network_cidr: "{{ os_network_cidr }}"
        os_network_allocation_pool_start: "{{ os_network_allocation_pool_start }}"
        os_network_allocation_pool_end: "{{ os_network_allocation_pool_end }}"
        os_network_gateway_ip: "{{ os_network_gateway_ip  }}"

        os_keyname: "{{agave_namespace}}-key"
        os_key_file: "{{os_public_key}}"
        os_key_file_src: "{{os_private_key}}"


- name: Provision Network and Security Groups
  hosts: local

  roles:
    - role: os_network_creator
      tags:
        - network

    - role: os_security_group_creator
      tags:
        - security_group

- name: Provision Auth VM Instances
  hosts: local

  roles:
    - role: os_instance_creator
      tags:
        - auth
        - instance
    - role: os_instance_creator
      tags:
        - auth
      vars:
        os_vm_name: "{{os_auth_vm_name}}"
        os_security_groups:
          - "{{os_auth_security_group}}"
        os_instance_group: auth
        os_instance_extra_groups:
          - apim
          - admin_services
          - clients
          - profiles
          - registration
          - togo
          - realtime


- name: Provision DB VM Instances
  hosts: local

  roles:
    - role: os_instance_creator
      tags:
        - db
        - instance
      vars:
        os_vm_name: "{{os_db_vm_name}}"
        os_security_groups:
          - "{{os_db_security_group}}"
        os_instance_group: db
        os_instance_extra_groups:
          - mysql
          - mongodb
          - queue
          - ldap


- name: Provision Core VM Instances
  hosts: local

  roles:

    - role: os_instance_creator
      tags:
        - core
        - api
        - instance
      vars:
        os_vm_name: "{{os_core_api_vm_name}}"
        os_security_groups:
          - "{{os_core_security_group}}"
        os_instance_group: core
        os_instance_extra_groups:
          - core_api

    - role: os_instance_creator
      tags:
        - core
        - worker
        - instance
      vars:
        os_vm_name: "{{os_core_worker_vm_name}}"
        os_security_groups:
          - "{{os_core_security_group}}"
        os_instance_group: core
        os_instance_extra_groups:
          - core_workers


- name: Set up Created Inventory and Check VM Readiness
  hosts: local

  tasks:

    - debug:
        var: agave_namespace
        verbosity: 0
      tags:
        - inventory
        - instance

    - name: "Collect Facts on Created VMs in {{agave_namespace}} Namespace"
      os_server_facts:
#        auth:
#            auth_url: "{{os_authurl}}"
#            domain_name: "{{os_domain}}"
#            project_name: "{{os_project}}"
#            username: "{{os_username}}"
#            password: "{{os_password}}"
#        region_name: "{{os_region}}"
        server: "{{agave_namespace}}.agave.*"
      tags:
        - inventory
        - instance
        - hosts


    - name: Add Created VMs to In-Memory Inventory
      add_host:
        name: "{{item.public_v4}}"
#        groups: "{{ item.name.split('.') }}"
        ansible_ssh_private_key_file: "{{os_key_file_src}}"
        ansible_ssh_host: "{{item.public_v4}}"
        ansible_ssh_username: "{{os_instance_username}}"
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
      loop: "{{openstack_servers}}"
      tags:
        - inventory
        - instance
        - hosts



#    - name: Add Created DB VM to In-Memory Inventory
#      with_items: "{{openstack_servers}}"
#      add_host:
#        name: "{{item.public_v4}}"
#        group: "db"
#        ansible_ssh_private_key_file: "{{agave_ssh_private_key}}"
#        ansible_ssh_host: "{{item.public_v4}}"
#        ansible_ssh_username: "{{os_instance_username}}"
#        ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
#      when: item.name == "{{agave_namespace}}.db"
#
#    - with_items: "{{openstack_servers}}"
#      set_fact:
##        sandbox_db: "{{item.public_v4}}"
#        sandbox_db: "{{item.private_v4}}"
#        ansible_ssh_host: "{{item.public_v4}}"
#        ansible_ssh_username: "{{os_instance_username}}"
#        ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
#      when: item.name == "{{agave_namespace}}.db"
#
#    - name: Add Created Core VM to In-Memory Inventory
#      with_items: "{{openstack_servers}}"
#      add_host:
#        name: "{{item.public_v4}}"
#        groups: "{{item.name|split(".")}}"
#        ansible_ssh_private_key_file: "{{agave_ssh_private_key}}"
#        ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
#      when: item.name == "{{agave_namespace}}.core"
#
#    - with_items: "{{openstack_servers}}"
#      set_fact:
##        sandbox_core: "{{item.public_v4}}"
#        sandbox_core: "{{item.private_v4}}"
#      when: item.name == "{{agave_namespace}}.core"
#
#    - name: Add Created Auth VM to In-Memory Inventory
#      with_items: "{{openstack_servers}}"
#      add_host:
#        name: "{{item.public_v4}}"
#        group: "auth"
#        ansible_ssh_private_key_file: "{{agave_ssh_private_key}}"
#        ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
#      when: item.name == "{{agave_namespace}}.auth"
#
#    - with_items: "{{openstack_servers}}"
#      set_fact:
##        sandbox_auth: "{{item.public_v4}}"
#        sandbox_auth: "{{item.private_v4}}"
#      when: item.name == "{{agave_namespace}}.auth"
#
#    - debug:
#        var: sandbox_auth
#        verbosity: 0
#    - debug:
#        var: sandbox_core
#        verbosity: 0
#    - debug:
#        var: sandbox_db
#        verbosity: 0
#    - with_items: "{{openstack_servers}}"
#      debug:
#        var: item.public_v4
#        verbosity: 0

    - name: Wait for SSH
      with_items: "{{openstack_servers}}"
      wait_for:
        host: "{{item.public_v4}}"
        port: 22
        state: started
        connect_timeout: 10
        delay: 15
        timeout: 300
      tags:
        - instance

    - name: generate inventory file
      debug: var=groups
      tags:
        - hosts

#- name: Install Agave Platform
#  import_playbook: deploy_agave.plbk
#
#############################################################
##
##   NEWMAN TESTING OF SERVICES
##
#############################################################
#
#- name: Run Validation Tests
#  hosts: deployer
#
#  vars:
#
#    # The hostname or ip of the linux server the newman tests will register with Agave and use to run all data and
#    # compute tests
#    newman_agave_test_system_host: 129.114.6.197
#
#    # The sftp port on which Agave should connect to `newman_agave_test_system_host` during the tests
#    newman_agave_test_system_port: 22
#
#    # The username with which Agave should connect to `newman_agave_test_system_host` during the tests
#    newman_agave_test_system_username: rodeo
#
#    # The virtual home directory to use in the system definition when Agave interacts with `newman_agave_test_system_host`
#    newman_agave_test_system_homedir: /home/rodeo
#
#    # The public key allowing connections to `newman_agave_test_system_host`
#    newman_agave_test_system_public_key_file: ~/.ssh/postman-rodeo.pub
#
#    # The private key Agave should use to connect to `newman_agave_test_system_host`
#    newman_agave_test_system_private_key_file: ~/.ssh/postman-rodeo.pem
#
#  roles:
#
#    - agave_newman_tester
#
#  tasks:
#
#    - debug:
#        var: hostvars['ansible_docker_container']
#        verbosity: 0
